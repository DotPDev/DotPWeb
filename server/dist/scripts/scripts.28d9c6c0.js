"use strict";angular.module("clientApp",["ngAnimate","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","firebase","ui.router"]).config(["$urlRouterProvider","$stateProvider","$locationProvider",function(a,b,c){c.html5Mode(!0),a.otherwise("/"),b.state("root",{url:"","abstract":!0,resolve:{},views:{"titlebar@":{templateUrl:"views/titlebar.html",controller:"TitlebarCtrl",controllerAs:"vm"}}}),b.state("root.dashboard",{url:"/",resolve:{},data:{pageName:"MainCtrl",browserTitle:"Main"},views:{"container@":{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"vm"}}}),b.state("root.login",{url:"/login",resolve:{},data:{pageName:"LoginCtrl",browserTitle:"Login"},views:{"container@":{templateUrl:"views/login.html",controller:"LoginCtrl",controllerAs:"vm"}}}),b.state("root.about",{url:"/about",resolve:{},data:{pageName:"AboutCtrl",browserTitle:"About"},views:{"container@":{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"vm"}}})}]).run(["$rootScope","firebaseSvc",function(a,b){b.initialize(),a.$on("$stateChangeSuccess",function(a){})}]),angular.module("clientApp").controller("MainCtrl",["$http","feedManager",function(a,b){function c(){d()}function d(){b.parseFeed().then(function(a){console.log(a),e.feed=a})["catch"](function(a){console.log(a)})}var e=this;e.feed={},c()}]),angular.module("clientApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("clientApp").factory("feedManager",["$http","$timeout",function(a,b){function c(){return a.get("/api/feed/").then(function(a){return a.message&&"service not loaded"===a.message&&b(function(){c()},3e3),a.data})["catch"](function(a){console.log(a)})}return{parseFeed:c}}]),angular.module("clientApp").controller("TitlebarCtrl",["$scope","auth","$window","$state",function(a,b,c,d){function e(){b.signOut(),d.go("root.dashboard")}var f=this;f.user=b.getAuth(),f.signOut=e,c.firebase.auth().onAuthStateChanged(function(b){b?(f.user=b,a.$apply()):(f.user=null,a.$apply())})}]),angular.module("clientApp").factory("firebaseSvc",["$window",function(a){var b,c,d,e=null;return{initialize:function(){var f={apiKey:"AIzaSyAvbGaPlMAtBnnnAzkJRbpBmmmIMee-PEI",authDomain:"defenseofthepatience-b2b5f.firebaseapp.com",databaseURL:"https://defenseofthepatience-b2b5f.firebaseio.com",storageBucket:"defenseofthepatience-b2b5f.appspot.com",messagingSenderId:"45457898855"};b=a.firebase.initializeApp(f),c=a.firebase.storage(),d=a.firebase.auth().onAuthStateChanged(function(a){e=a})}}}]),angular.module("clientApp").factory("auth",["$window",function(a){function b(a,b){return g.auth().createUserWithEmailAndPassword(a,b)["catch"](function(a){return console.log(a),null})}function c(a,b){return g.auth().signInWithEmailAndPassword(a,b)["catch"](function(a){return console.log(a),null})}function d(){return g.auth().signOut()}function e(){return g.auth().currentUser}function f(a){return g.auth().sendPasswordResetEmail(a)}var g=a.firebase;return{createUserAccount:b,signIn:c,signOut:d,getAuth:e,resetPassword:f}}]),angular.module("clientApp").controller("LoginCtrl",["$state","auth","$window","utils",function(a,b,c,d){function e(a){a&&(m.createMode?j():i())}function f(){m.createMode=!1,m.resetPasswordMode=!0}function g(){m.createMode=!1,m.resetPasswordMode=!1}function h(a){b.resetPassword(a).then(function(a){})["catch"](function(a){console.log(a),console.log("reset email error, object is:")})}function i(){b.signIn(m.userEmail,m.password).then(function(b){m.user=b,a.go("root.dashboard")})["catch"](function(a){console.log(a)})}function j(){b.createUserAccount(m.newUserEmail,m.newPassword).then(function(a){k(a,!0)})["catch"](function(a){console.log(a)})}function k(a,b){a.updateProfile({email:a.email,displayName:m.newUserDisplayName||""}).then(function(){i(),l(a,b)},function(a){console.log(a)})}function l(a,b){var e=d.makeServerTime(),f={email:a.email,displayName:m.newUserDisplayName||"",photoURL:a.photoURL||"",createdAt:e};b?c.firebase.database().ref("users/"+a.uid).set(f).then(function(){})["catch"](function(a){console.log(a)}):c.firebase.database().ref("users/"+a.uid).update(f).then(function(){})["catch"](function(a){console.log(a)})}var m=this;m.user=b.getAuth(),m.submitForm=e,m.createUser=j,m.updateProfile=k,m.resetPassword=f,m.cancelAction=g,m.login=i,m.forgotPassword=h,m.password="",m.userEmail="",m.newUserEmail="",m.newUserDisplayName="",m.resetEmail="",m.newPassword="",m.confirmPassword="",m.createMode=!1,m.resetPasswordMode=!1}]),angular.module("clientApp").factory("utils",function(){function a(){var a=Date.now(),b=Math.floor(a/1e3);return b}return{makeServerTime:a}}),angular.module("clientApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/login.html",'<div class="login-wrapper"> <div class="inner-login-wrapper"> <div class="logged-in-info" ng-if="vm.user"> <div class=""> Logged in as {{vm.user.email}} </div> </div> <form ng-if="!vm.user" name="loginForm" class="form login-form" ng-submit="vm.submitForm(loginForm.$valid)" novalidate> <div class="form-group" ng-if="!vm.createMode && !vm.resetPasswordMode"> <label for="userEmail">Email Address</label> <input class="" id="userEmail" type="email" name="userEmail" ng-model="vm.userEmail" required> <div ng-messages="loginForm.userEmail.$error"> <p class="error-message" ng-message="required" ng-show="loginForm.userEmail.$touched">Email Address is required.</p> <p class="error-message" class="error-message" ng-message="email" ng-show="loginForm.userEmail.$touched">Must be valid email.</p> </div> </div> <div class="form-group" ng-if="!vm.createMode && !vm.resetPasswordMode"> <label for="password">Password</label> <input class="" type="text" name="password" id="password" ng-model="vm.password" required> <div ng-messages="loginForm.password.$error"> <p class="error-message" ng-message="required" ng-show="loginForm.password.$touched">Password is required.</p> </div> </div> <div class="form-group" ng-if="vm.createMode"> <label for="newUserEmail">Email Address</label> <input class="" id="newUserEmail" type="text" name="newUserEmail" ng-model="vm.newUserEmail" required> <div ng-messages="loginForm.newUserEmail.$error"> <p class="error-message" ng-message="required" ng-show="loginForm.newUserEmail.$touched">Email Address is required.</p> <p class="error-message" ng-message="email" ng-show="loginForm.newUserEmail.$touched">Must be valid email.</p> </div> </div> <div class="form-group" ng-if="vm.createMode"> <label for="newUserDisplayName">Display Name</label> <input class="" id="newUserDisplayName" type="text" name="newUserDisplayName" ng-model="vm.newUserDisplayName"> </div> <div class="form-group" ng-if="vm.createMode"> <label for="newPassword">Password</label> <input class="" type="text" id="newPassword" name="newPassword" ng-model="vm.newPassword" required> <div ng-messages="loginForm.newPassword.$error"> <p class="error-message" ng-message="required" ng-show="loginForm.newPassword.$touched">Password is required.</p> </div> </div> <div class="form-group" ng-if="vm.createMode"> <label for="confirmPassword">Confirm Password</label> <input class="" type="text" id="confirmPassword" name="confirmPassword" ng-model="vm.confirmPassword" ng-pattern="{{vm.newPassword}}" required> <div ng-messages="loginForm.confirmPassword.$error"> <p class="error-message" ng-message="pattern" ng-show="loginForm.confirmPassword.$touched">Passwords do not match.</p> </div> </div> <div class="form-group" ng-if="vm.resetPasswordMode"> <label for="resetEmail">Email Address</label> <input class="" id="resetEmail" type="email" name="resetEmail" ng-model="vm.resetEmail" required> <div ng-messages="loginForm.resetEmail.$error"> <p class="error-message" ng-message="required" ng-show="loginForm.resetEmail.$touched">Email is required.</p> <p class="error-message" ng-message="email" ng-show="loginForm.resetEmail.$touched">Must be valid email.</p> </div> </div> <button ng-disabled="loginForm.$invalid" type="submit" class="cmdr-button" ng-if="!vm.createMode && !vm.resetPasswordMode"> LOGIN </button> <button type="submit" ng-click="vm.createMode = !vm.createMode" ng-if="!vm.createMode && !vm.resetPasswordMode"> REGISTER </button> <button ng-disabled="loginForm.$invalid" ng-if="vm.createMode"> CREATE </button> <button ng-disabled="loginForm.$invalid" ng-click="vm.forgotPassword()" ng-if="vm.resetPasswordMode"> SEND EMAIL </button> <button ng-click="vm.cancelAction()" ng-if="vm.createMode || vm.resetPasswordMode"> CANCEL </button> <div class="forgot-password" ng-click="vm.resetPassword()" ng-if="!vm.resetPasswordMode && !vm.createMode"> Forgot Password? </div> </form> </div> </div>'),a.put("views/main.html",'<div class="jumbotron"> <h1>\'Allo, \'Allo!</h1> <p class="lead"> <img src="images/yeoman.c582c4d1.png" alt="I\'m Yeoman"><br> Always a pleasure scaffolding your apps. </p> <p><a class="btn btn-lg btn-success" ng-href="#/">Splendid!<i class="fa fa-check"></i></a></p> </div> <div class="row users"> <ul> <li ng-repeat="user in awesomeUsers"> {{user.email}} </li> </ul> </div> <div class="row marketing"> <h4>HTML5 Boilerplate</h4> <p> HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites. </p> <h4>Angular</h4> <p> AngularJS is a toolset for building the framework most suited to your application development. </p> <h4>Karma</h4> <p>Spectacular Test Runner for JavaScript.</p> </div>'),a.put("views/titlebar.html",'<div class="header"> <div class="navbar navbar-default" role="navigation"> <div class="container"> <div class="navbar-header"> <a class="navbar-brand" href="/">client</a> </div> <div class="collapse"> <ul class="nav navbar-nav"> <li class="active"><a href="/">Home</a></li> <li><a ng-href="/about">About</a></li> <li> <a ng-if="!vm.user" ng-href="/login">Login</a> <a ng-if="vm.user" ng-href="/login">{{vm.user.displayName || vm.user.email}}</a> </li> <li ng-if="vm.user"><a ng-click="vm.signOut()" ng-href="/">Sign Out</a></li> </ul> </div> </div> </div> </div>')}]);